diff --git a/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js b/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js
index 9d16738..bbc66a0 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js
+++ b/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js
@@ -3,7 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-exports.default = exports.tchildrenRendererDefaultProps = void 0;
+exports.default = void 0;
 
 var _renderChildren = _interopRequireDefault(require("./renderChildren"));
 
@@ -15,15 +15,6 @@ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { de
  */
 const TChildrenRenderer = _renderChildren.default.bind(null);
 
-const tchildrenRendererDefaultProps = {
-  propsForChildren: {}
-};
-/**
- * @ignore
- */
-
-exports.tchildrenRendererDefaultProps = tchildrenRendererDefaultProps;
-TChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;
 var _default = TChildrenRenderer;
 exports.default = _default;
 //# sourceMappingURL=TChildrenRenderer.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js.map b/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js.map
index 3fdd160..50e52b5 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js.map
+++ b/node_modules/react-native-render-html/lib/commonjs/TChildrenRenderer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["TChildrenRenderer.tsx"],"names":["TChildrenRenderer","renderChildren","bind","tchildrenRendererDefaultProps","propsForChildren","defaultProps"],"mappings":";;;;;;;AAEA;;;;AAEA;AACA;AACA;AACA;AACA,MAAMA,iBAA4D,GAChEC,wBAAeC,IAAf,CAAoB,IAApB,CADF;;AAGO,MAAMC,6BAGZ,GAAG;AACFC,EAAAA,gBAAgB,EAAE;AADhB,CAHG;AAOP;AACA;AACA;;;AACAJ,iBAAiB,CAACK,YAAlB,GAAiCF,6BAAjC;eAEeH,iB","sourcesContent":["import { FunctionComponent } from 'react';\nimport { TChildrenRendererProps } from './shared-types';\nimport renderChildren from './renderChildren';\n\n/**\n * A component to render collections of tnodes.\n * Especially useful when used with {@link useTNodeChildrenProps}.\n */\nconst TChildrenRenderer: FunctionComponent<TChildrenRendererProps> =\n  renderChildren.bind(null);\n\nexport const tchildrenRendererDefaultProps: Pick<\n  TChildrenRendererProps,\n  'propsForChildren'\n> = {\n  propsForChildren: {}\n};\n\n/**\n * @ignore\n */\nTChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;\n\nexport default TChildrenRenderer;\n"]}
\ No newline at end of file
+{"version":3,"sources":["TChildrenRenderer.tsx"],"names":["TChildrenRenderer","renderChildren","bind"],"mappings":";;;;;;;AAEA;;;;AAEA;AACA;AACA;AACA;AACA,MAAMA,iBAA4D,GAChEC,wBAAeC,IAAf,CAAoB,IAApB,CADF;;eAGeF,iB","sourcesContent":["import { FunctionComponent } from 'react';\nimport { TChildrenRendererProps } from './shared-types';\nimport renderChildren from './renderChildren';\n\n/**\n * A component to render collections of tnodes.\n * Especially useful when used with {@link useTNodeChildrenProps}.\n */\nconst TChildrenRenderer: FunctionComponent<TChildrenRendererProps> =\n  renderChildren.bind(null);\n\nexport default TChildrenRenderer;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js b/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js
index 50b43ca..5ecf4a4 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js
+++ b/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js
@@ -8,8 +8,6 @@ exports.default = void 0;
 
 var _SharedPropsProvider = require("./context/SharedPropsProvider");
 
-var _TChildrenRenderer = require("./TChildrenRenderer");
-
 var _renderChildren = _interopRequireDefault(require("./renderChildren"));
 
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
@@ -78,12 +76,7 @@ function TNodeChildrenRenderer(props) {
 
   return (0, _renderChildren.default)(useTNodeChildrenProps(props));
 }
-/**
- * @ignore
- */
-
 
-TNodeChildrenRenderer.defaultProps = _TChildrenRenderer.tchildrenRendererDefaultProps;
 var _default = TNodeChildrenRenderer;
 exports.default = _default;
 //# sourceMappingURL=TNodeChildrenRenderer.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js.map b/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js.map
index 2a7c4b6..ba13ece 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js.map
+++ b/node_modules/react-native-render-html/lib/commonjs/TNodeChildrenRenderer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["TNodeChildrenRenderer.tsx"],"names":["isCollapsible","tnode","type","useTNodeChildrenProps","propsForChildren","disableMarginCollapsing","renderChild","enableExperimentalMarginCollapsing","shouldCollapseChildren","tchildren","children","TNodeChildrenRenderer","props","data","defaultProps","tchildrenRendererDefaultProps"],"mappings":";;;;;;;;AAEA;;AACA;;AAKA;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAAqC;AACnC,SAAOA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACC,IAAN,KAAe,UAAhD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,qBAAT,CAA+B;AACpCF,EAAAA,KADoC;AAEpCG,EAAAA,gBAFoC;AAGpCC,EAAAA,uBAAuB,GAAG,KAHU;AAIpCC,EAAAA;AAJoC,CAA/B,EAKgD;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAyC,0CAA/C;AACA,QAAMC,sBAAsB,GAC1BD,kCAAkC,IAClC,CAACF,uBADD,IAEAL,aAAa,CAACC,KAAD,CAHf;AAIA,SAAO;AACLG,IAAAA,gBADK;AAELC,IAAAA,uBAAuB,EAAE,CAACG,sBAFrB;AAGLC,IAAAA,SAAS,EAAER,KAAK,CAACS,QAHZ;AAILJ,IAAAA;AAJK,GAAP;AAMD;AAED;AACA;AACA;;;AACA,SAASK,qBAAT,CACEC,KADF,EAEgB;AACd,MAAIA,KAAK,CAACX,KAAN,CAAYC,IAAZ,KAAqB,MAAzB,EAAiC;AAC/B;AACA,WAAOU,KAAK,CAACX,KAAN,CAAYY,IAAnB;AACD,GAJa,CAKd;AACA;AACA;;;AACA,SAAO,6BAAeV,qBAAqB,CAACS,KAAD,CAApC,CAAP;AACD;AAED;AACA;AACA;;;AACAD,qBAAqB,CAACG,YAAtB,GAAqCC,gDAArC;eAEeJ,qB","sourcesContent":["import { ReactElement } from 'react';\nimport { TNode } from '@native-html/transient-render-engine';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport { tchildrenRendererDefaultProps } from './TChildrenRenderer';\nimport {\n  TChildrenRendererProps,\n  TNodeChildrenRendererProps\n} from './shared-types';\nimport renderChildren from './renderChildren';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\n/**\n * A hook especially useful when one need to tamper with children in a custom\n * renderer. Should be used with {@link TChildrenRenderer}.\n *\n * @example\n * For example, a custom renderer which inserts ads in an article:\n *\n * ```tsx\n * function ArticleRenderer(props) {\n *   const { tnode, TDefaultRenderer, ...defaultRendererProps } = props;\n *   const tchildrenProps = useTNodeChildrenProps(props);\n *   const firstChildrenChunk = tnode.children.slice(0, 2);\n *   const secondChildrenChunk = tnode.children.slice(2, 4);\n *   const thirdChildrenChunk = tnode.children.slice(4, 5);\n *   return (\n *     <TDefaultRenderer tnode={tnode} {...defaultRendererProps}>\n *       <TChildrenRenderer {...tchildrenProps} tchildren={firstChildrenChunk} />\n *       {firstChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={secondChildrenChunk} />\n *       {secondChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={thirdChildrenChunk} />\n *     </TDefaultRenderer>\n *   );\n * };\n * ```\n */\nexport function useTNodeChildrenProps({\n  tnode,\n  propsForChildren,\n  disableMarginCollapsing = false,\n  renderChild\n}: TNodeChildrenRendererProps): TChildrenRendererProps {\n  const { enableExperimentalMarginCollapsing } = useSharedProps();\n  const shouldCollapseChildren =\n    enableExperimentalMarginCollapsing &&\n    !disableMarginCollapsing &&\n    isCollapsible(tnode);\n  return {\n    propsForChildren,\n    disableMarginCollapsing: !shouldCollapseChildren,\n    tchildren: tnode.children,\n    renderChild\n  };\n}\n\n/**\n * A component to render all children of a {@link TNode}.\n */\nfunction TNodeChildrenRenderer(\n  props: TNodeChildrenRendererProps\n): ReactElement {\n  if (props.tnode.type === 'text') {\n    // see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n    return props.tnode.data as unknown as ReactElement;\n  }\n  // A tnode type will never change. We can safely\n  // ignore the non-conditional rule of hooks.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return renderChildren(useTNodeChildrenProps(props));\n}\n\n/**\n * @ignore\n */\nTNodeChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;\n\nexport default TNodeChildrenRenderer;\n"]}
\ No newline at end of file
+{"version":3,"sources":["TNodeChildrenRenderer.tsx"],"names":["isCollapsible","tnode","type","useTNodeChildrenProps","propsForChildren","disableMarginCollapsing","renderChild","enableExperimentalMarginCollapsing","shouldCollapseChildren","tchildren","children","TNodeChildrenRenderer","props","data"],"mappings":";;;;;;;;AAEA;;AAKA;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAAqC;AACnC,SAAOA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACC,IAAN,KAAe,UAAhD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,qBAAT,CAA+B;AACpCF,EAAAA,KADoC;AAEpCG,EAAAA,gBAFoC;AAGpCC,EAAAA,uBAAuB,GAAG,KAHU;AAIpCC,EAAAA;AAJoC,CAA/B,EAKgD;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAyC,0CAA/C;AACA,QAAMC,sBAAsB,GAC1BD,kCAAkC,IAClC,CAACF,uBADD,IAEAL,aAAa,CAACC,KAAD,CAHf;AAIA,SAAO;AACLG,IAAAA,gBADK;AAELC,IAAAA,uBAAuB,EAAE,CAACG,sBAFrB;AAGLC,IAAAA,SAAS,EAAER,KAAK,CAACS,QAHZ;AAILJ,IAAAA;AAJK,GAAP;AAMD;AAED;AACA;AACA;;;AACA,SAASK,qBAAT,CACEC,KADF,EAEgB;AACd,MAAIA,KAAK,CAACX,KAAN,CAAYC,IAAZ,KAAqB,MAAzB,EAAiC;AAC/B;AACA,WAAOU,KAAK,CAACX,KAAN,CAAYY,IAAnB;AACD,GAJa,CAKd;AACA;AACA;;;AACA,SAAO,6BAAeV,qBAAqB,CAACS,KAAD,CAApC,CAAP;AACD;;eAEcD,qB","sourcesContent":["import { ReactElement } from 'react';\nimport { TNode } from '@native-html/transient-render-engine';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport {\n  TChildrenRendererProps,\n  TNodeChildrenRendererProps\n} from './shared-types';\nimport renderChildren from './renderChildren';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\n/**\n * A hook especially useful when one need to tamper with children in a custom\n * renderer. Should be used with {@link TChildrenRenderer}.\n *\n * @example\n * For example, a custom renderer which inserts ads in an article:\n *\n * ```tsx\n * function ArticleRenderer(props) {\n *   const { tnode, TDefaultRenderer, ...defaultRendererProps } = props;\n *   const tchildrenProps = useTNodeChildrenProps(props);\n *   const firstChildrenChunk = tnode.children.slice(0, 2);\n *   const secondChildrenChunk = tnode.children.slice(2, 4);\n *   const thirdChildrenChunk = tnode.children.slice(4, 5);\n *   return (\n *     <TDefaultRenderer tnode={tnode} {...defaultRendererProps}>\n *       <TChildrenRenderer {...tchildrenProps} tchildren={firstChildrenChunk} />\n *       {firstChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={secondChildrenChunk} />\n *       {secondChildrenChunk.length === 2 ? <AdComponent /> : null}\n *       <TChildrenRenderer {...tchildrenProps} tchildren={thirdChildrenChunk} />\n *     </TDefaultRenderer>\n *   );\n * };\n * ```\n */\nexport function useTNodeChildrenProps({\n  tnode,\n  propsForChildren,\n  disableMarginCollapsing = false,\n  renderChild\n}: TNodeChildrenRendererProps): TChildrenRendererProps {\n  const { enableExperimentalMarginCollapsing } = useSharedProps();\n  const shouldCollapseChildren =\n    enableExperimentalMarginCollapsing &&\n    !disableMarginCollapsing &&\n    isCollapsible(tnode);\n  return {\n    propsForChildren,\n    disableMarginCollapsing: !shouldCollapseChildren,\n    tchildren: tnode.children,\n    renderChild\n  };\n}\n\n/**\n * A component to render all children of a {@link TNode}.\n */\nfunction TNodeChildrenRenderer(\n  props: TNodeChildrenRendererProps\n): ReactElement {\n  if (props.tnode.type === 'text') {\n    // see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/20544\n    return props.tnode.data as unknown as ReactElement;\n  }\n  // A tnode type will never change. We can safely\n  // ignore the non-conditional rule of hooks.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return renderChildren(useTNodeChildrenProps(props));\n}\n\nexport default TNodeChildrenRenderer;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js b/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js
index eafc942..e083941 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js
+++ b/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js
@@ -57,7 +57,11 @@ const TNodeRenderer = /*#__PURE__*/(0, _react.memo)(function MemoizedTNodeRender
   const sharedProps = (0, _SharedPropsProvider.useSharedProps)();
   const renderRegistry = (0, _RenderRegistryProvider.useRendererRegistry)();
   const TNodeChildrenRenderer = (0, _TChildrenRendererContext.useTNodeChildrenRenderer)();
-  const tnodeProps = { ...props,
+  const tnodeProps = {
+    propsFromParent: {
+      collapsedMarginTop: null
+    },
+    ...props,
     TNodeChildrenRenderer,
     sharedProps
   };
@@ -109,13 +113,6 @@ const TNodeRenderer = /*#__PURE__*/(0, _react.memo)(function MemoizedTNodeRender
   const renderFn = tnode.type === 'block' || tnode.type === 'document' ? _renderBlockContent.default : _renderTextualContent.default;
   return Renderer === null ? renderFn(assembledProps) : /*#__PURE__*/_react.default.createElement(Renderer, assembledProps);
 });
-const defaultProps = {
-  propsFromParent: {
-    collapsedMarginTop: null
-  }
-}; // @ts-expect-error default props must be defined
-
-TNodeRenderer.defaultProps = defaultProps;
 var _default = TNodeRenderer;
 exports.default = _default;
 //# sourceMappingURL=TNodeRenderer.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js.map b/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js.map
index 204b82a..7721e92 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js.map
+++ b/node_modules/react-native-render-html/lib/commonjs/TNodeRenderer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["TNodeRenderer.tsx"],"names":["TDefaultBlockRenderer","renderBlockContent","bind","displayName","TDefaultPhrasingRenderer","renderTextualContent","TDefaultTextRenderer","isGhostTNode","tnode","type","data","TNodeRenderer","MemoizedTNodeRenderer","props","sharedProps","renderRegistry","TNodeChildrenRenderer","tnodeProps","renderer","renderEmptyContent","assembledProps","Renderer","InternalTextRenderer","getInternalTextRenderer","tagName","React","createElement","enableExperimentalGhostLinesPrevention","bypassAnonymousTPhrasingNodes","children","length","every","renderFn","defaultProps","propsFromParent","collapsedMarginTop"],"mappings":"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","sourcesContent":["import React, { memo, ReactElement } from 'react';\nimport { TDefaultRenderer, TNodeRendererProps } from './shared-types';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport {\n  TText,\n  TBlock,\n  TNode,\n  TPhrasing\n} from '@native-html/transient-render-engine';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport renderTextualContent from './renderTextualContent';\nimport { useRendererRegistry } from './context/RenderRegistryProvider';\nimport renderBlockContent from './renderBlockContent';\nimport renderEmptyContent from './renderEmptyContent';\n\nexport type { TNodeRendererProps } from './shared-types';\n\nconst TDefaultBlockRenderer: TDefaultRenderer<TBlock> =\n  renderBlockContent.bind(null);\n\nTDefaultBlockRenderer.displayName = 'TDefaultBlockRenderer';\n\nconst TDefaultPhrasingRenderer: TDefaultRenderer<TPhrasing> =\n  renderTextualContent.bind(null);\n\nTDefaultPhrasingRenderer.displayName = 'TDefaultPhrasingRenderer';\n\nconst TDefaultTextRenderer: TDefaultRenderer<TText> =\n  renderTextualContent.bind(null);\n\nTDefaultTextRenderer.displayName = 'TDefaultTextRenderer';\n\nfunction isGhostTNode(tnode: TNode) {\n  return (\n    (tnode.type === 'text' && (tnode.data === '' || tnode.data === ' ')) ||\n    tnode.type === 'empty'\n  );\n}\n\n/**\n * A component to render any {@link TNode}.\n */\nconst TNodeRenderer = memo(function MemoizedTNodeRenderer(\n  props: TNodeRendererProps<any>\n): ReactElement | null {\n  const { tnode } = props;\n  const sharedProps = useSharedProps();\n  const renderRegistry = useRendererRegistry();\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const tnodeProps = {\n    ...props,\n    TNodeChildrenRenderer,\n    sharedProps\n  };\n  const renderer =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? TDefaultBlockRenderer\n      : tnode.type === 'text'\n      ? TDefaultTextRenderer\n      : tnode.type === 'phrasing'\n      ? TDefaultPhrasingRenderer\n      : renderEmptyContent;\n\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    tnodeProps,\n    renderer as any\n  );\n  switch (tnode.type) {\n    case 'empty':\n      return renderEmptyContent(assembledProps);\n    case 'text':\n      const InternalTextRenderer = renderRegistry.getInternalTextRenderer(\n        props.tnode.tagName\n      );\n\n      if (InternalTextRenderer) {\n        return React.createElement(InternalTextRenderer, tnodeProps);\n      }\n      // If ghost line prevention is enabled and the text data is empty, render\n      // nothing to avoid React Native painting a 20px height line.\n      // See also https://git.io/JErwX\n      if (\n        tnodeProps.tnode.data === '' &&\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention\n      ) {\n        return null;\n      }\n      break;\n    case 'phrasing':\n      // When a TPhrasing node is anonymous and has only one child, its\n      // rendering amounts to rendering its only child.\n      if (\n        tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.length <= 1\n      ) {\n        return React.createElement(TNodeChildrenRenderer, {\n          tnode: props.tnode\n        });\n      }\n      // If ghost line prevention is enabled and the tnode is an anonymous empty\n      // phrasing node, render nothing to avoid React Native painting a 20px\n      // height line. See also https://git.io/JErwX\n      if (\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.every(isGhostTNode)\n      ) {\n        return null;\n      }\n      break;\n  }\n  const renderFn =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? renderBlockContent\n      : renderTextualContent;\n  return Renderer === null\n    ? renderFn(assembledProps)\n    : React.createElement(Renderer as any, assembledProps);\n});\n\nconst defaultProps: Required<Pick<TNodeRendererProps<any>, 'propsFromParent'>> =\n  {\n    propsFromParent: {\n      collapsedMarginTop: null\n    }\n  };\n\n// @ts-expect-error default props must be defined\nTNodeRenderer.defaultProps = defaultProps;\n\nexport {\n  TDefaultBlockRenderer,\n  TDefaultPhrasingRenderer,\n  TDefaultTextRenderer\n};\n\nexport default TNodeRenderer;\n"]}
\ No newline at end of file
+{"version":3,"sources":["TNodeRenderer.tsx"],"names":["TDefaultBlockRenderer","renderBlockContent","bind","displayName","TDefaultPhrasingRenderer","renderTextualContent","TDefaultTextRenderer","isGhostTNode","tnode","type","data","TNodeRenderer","MemoizedTNodeRenderer","props","sharedProps","renderRegistry","TNodeChildrenRenderer","tnodeProps","propsFromParent","collapsedMarginTop","renderer","renderEmptyContent","assembledProps","Renderer","InternalTextRenderer","getInternalTextRenderer","tagName","React","createElement","enableExperimentalGhostLinesPrevention","bypassAnonymousTPhrasingNodes","children","length","every","renderFn"],"mappings":"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","sourcesContent":["import React, { memo, ReactElement } from 'react';\nimport { TDefaultRenderer, TNodeRendererProps } from './shared-types';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport {\n  TText,\n  TBlock,\n  TNode,\n  TPhrasing\n} from '@native-html/transient-render-engine';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport renderTextualContent from './renderTextualContent';\nimport { useRendererRegistry } from './context/RenderRegistryProvider';\nimport renderBlockContent from './renderBlockContent';\nimport renderEmptyContent from './renderEmptyContent';\n\nexport type { TNodeRendererProps } from './shared-types';\n\nconst TDefaultBlockRenderer: TDefaultRenderer<TBlock> =\n  renderBlockContent.bind(null);\n\nTDefaultBlockRenderer.displayName = 'TDefaultBlockRenderer';\n\nconst TDefaultPhrasingRenderer: TDefaultRenderer<TPhrasing> =\n  renderTextualContent.bind(null);\n\nTDefaultPhrasingRenderer.displayName = 'TDefaultPhrasingRenderer';\n\nconst TDefaultTextRenderer: TDefaultRenderer<TText> =\n  renderTextualContent.bind(null);\n\nTDefaultTextRenderer.displayName = 'TDefaultTextRenderer';\n\nfunction isGhostTNode(tnode: TNode) {\n  return (\n    (tnode.type === 'text' && (tnode.data === '' || tnode.data === ' ')) ||\n    tnode.type === 'empty'\n  );\n}\n\n/**\n * A component to render any {@link TNode}.\n */\nconst TNodeRenderer = memo(function MemoizedTNodeRenderer(\n  props: TNodeRendererProps<any>\n): ReactElement | null {\n  const { tnode } = props;\n  const sharedProps = useSharedProps();\n  const renderRegistry = useRendererRegistry();\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const tnodeProps = {\n    propsFromParent: { collapsedMarginTop: null },\n    ...props,\n    TNodeChildrenRenderer,\n    sharedProps\n  };\n  const renderer =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? TDefaultBlockRenderer\n      : tnode.type === 'text'\n      ? TDefaultTextRenderer\n      : tnode.type === 'phrasing'\n      ? TDefaultPhrasingRenderer\n      : renderEmptyContent;\n\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    tnodeProps,\n    renderer as any\n  );\n  switch (tnode.type) {\n    case 'empty':\n      return renderEmptyContent(assembledProps);\n    case 'text':\n      const InternalTextRenderer = renderRegistry.getInternalTextRenderer(\n        props.tnode.tagName\n      );\n\n      if (InternalTextRenderer) {\n        return React.createElement(InternalTextRenderer, tnodeProps);\n      }\n      // If ghost line prevention is enabled and the text data is empty, render\n      // nothing to avoid React Native painting a 20px height line.\n      // See also https://git.io/JErwX\n      if (\n        tnodeProps.tnode.data === '' &&\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention\n      ) {\n        return null;\n      }\n      break;\n    case 'phrasing':\n      // When a TPhrasing node is anonymous and has only one child, its\n      // rendering amounts to rendering its only child.\n      if (\n        tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.length <= 1\n      ) {\n        return React.createElement(TNodeChildrenRenderer, {\n          tnode: props.tnode\n        });\n      }\n      // If ghost line prevention is enabled and the tnode is an anonymous empty\n      // phrasing node, render nothing to avoid React Native painting a 20px\n      // height line. See also https://git.io/JErwX\n      if (\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.every(isGhostTNode)\n      ) {\n        return null;\n      }\n      break;\n  }\n  const renderFn =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? renderBlockContent\n      : renderTextualContent;\n  return Renderer === null\n    ? renderFn(assembledProps)\n    : React.createElement(Renderer as any, assembledProps);\n});\n\nexport {\n  TDefaultBlockRenderer,\n  TDefaultPhrasingRenderer,\n  TDefaultTextRenderer\n};\n\nexport default TNodeRenderer;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js b/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js
index 3a700b6..89a4dd4 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js
+++ b/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js
@@ -5,89 +5,16 @@ Object.defineProperty(exports, "__esModule", {
 });
 exports.useAmbientTRenderEngine = useAmbientTRenderEngine;
 exports.default = TRenderEngineProvider;
-exports.defaultTRenderEngineProviderProps = exports.defaultFallbackFonts = exports.tRenderEngineProviderPropTypes = void 0;
 
 var _react = _interopRequireDefault(require("react"));
 
-var _reactNative = require("react-native");
-
-var _propTypes = _interopRequireDefault(require("prop-types"));
-
 var _useTRenderEngine = _interopRequireDefault(require("./hooks/useTRenderEngine"));
 
-var _defaultSystemFonts = _interopRequireDefault(require("./defaultSystemFonts"));
-
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 
 const defaultTRenderEngine = {};
 
 const TRenderEngineContext = /*#__PURE__*/_react.default.createContext(defaultTRenderEngine);
-
-const tRenderEngineProviderPropTypes = {
-  customHTMLElementModels: _propTypes.default.object.isRequired,
-  enableCSSInlineProcessing: _propTypes.default.bool,
-  enableUserAgentStyles: _propTypes.default.bool,
-  idsStyles: _propTypes.default.object,
-  ignoredDomTags: _propTypes.default.array,
-  ignoreDomNode: _propTypes.default.func,
-  domVisitors: _propTypes.default.object,
-  ignoredStyles: _propTypes.default.array.isRequired,
-  allowedStyles: _propTypes.default.array,
-  htmlParserOptions: _propTypes.default.object,
-  tagsStyles: _propTypes.default.object,
-  classesStyles: _propTypes.default.object,
-  emSize: _propTypes.default.number.isRequired,
-  baseStyle: _propTypes.default.object,
-  systemFonts: _propTypes.default.arrayOf(_propTypes.default.string),
-  fallbackFonts: _propTypes.default.shape({
-    serif: _propTypes.default.string,
-    'sans-serif': _propTypes.default.string,
-    monospace: _propTypes.default.string
-  }),
-  setMarkersForTNode: _propTypes.default.func,
-  dangerouslyDisableHoisting: _propTypes.default.bool,
-  dangerouslyDisableWhitespaceCollapsing: _propTypes.default.bool,
-  selectDomRoot: _propTypes.default.func
-};
-/**
- * Default fallback font for special keys such as 'sans-serif', 'monospace',
- * 'serif', based on current platform.
- */
-
-exports.tRenderEngineProviderPropTypes = tRenderEngineProviderPropTypes;
-const defaultFallbackFonts = {
-  'sans-serif': _reactNative.Platform.select({
-    ios: 'system',
-    default: 'sans-serif'
-  }),
-  monospace: _reactNative.Platform.select({
-    ios: 'Menlo',
-    default: 'monospace'
-  }),
-  serif: _reactNative.Platform.select({
-    ios: 'Times New Roman',
-    default: 'serif'
-  })
-};
-exports.defaultFallbackFonts = defaultFallbackFonts;
-const defaultTRenderEngineProviderProps = {
-  htmlParserOptions: {
-    decodeEntities: true
-  },
-  emSize: 14,
-  ignoredDomTags: [],
-  ignoredStyles: [],
-  baseStyle: {
-    fontSize: 14
-  },
-  tagsStyles: {},
-  classesStyles: {},
-  enableUserAgentStyles: true,
-  enableCSSInlineProcessing: true,
-  customHTMLElementModels: {},
-  fallbackFonts: defaultFallbackFonts,
-  systemFonts: _defaultSystemFonts.default
-};
 /**
  * Use the ambient transient render engine.
  *
@@ -96,7 +23,6 @@ const defaultTRenderEngineProviderProps = {
  * @public
  */
 
-exports.defaultTRenderEngineProviderProps = defaultTRenderEngineProviderProps;
 
 function useAmbientTRenderEngine() {
   const engine = _react.default.useContext(TRenderEngineContext);
@@ -126,15 +52,4 @@ function TRenderEngineProvider({
     value: engine
   }, children);
 }
-/**
- * @ignore
- */
-
-
-TRenderEngineProvider.defaultProps = defaultTRenderEngineProviderProps;
-/**
- * @ignore
- */
-
-TRenderEngineProvider.propTypes = tRenderEngineProviderPropTypes;
 //# sourceMappingURL=TRenderEngineProvider.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js.map b/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js.map
index cf76758..c21b058 100644
--- a/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js.map
+++ b/node_modules/react-native-render-html/lib/commonjs/TRenderEngineProvider.js.map
@@ -1 +1 @@
-{"version":3,"sources":["TRenderEngineProvider.tsx"],"names":["defaultTRenderEngine","TRenderEngineContext","React","createContext","tRenderEngineProviderPropTypes","customHTMLElementModels","PropTypes","object","isRequired","enableCSSInlineProcessing","bool","enableUserAgentStyles","idsStyles","ignoredDomTags","array","ignoreDomNode","func","domVisitors","ignoredStyles","allowedStyles","htmlParserOptions","tagsStyles","classesStyles","emSize","number","baseStyle","systemFonts","arrayOf","string","fallbackFonts","shape","serif","monospace","setMarkersForTNode","dangerouslyDisableHoisting","dangerouslyDisableWhitespaceCollapsing","selectDomRoot","defaultFallbackFonts","Platform","select","ios","default","defaultTRenderEngineProviderProps","decodeEntities","fontSize","defaultSystemFonts","useAmbientTRenderEngine","engine","useContext","__DEV__","console","error","TRenderEngineProvider","children","config","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import TRenderEngine from '@native-html/transient-render-engine';\nimport React, { PropsWithChildren, ReactElement } from 'react';\nimport { Platform } from 'react-native';\nimport PropTypes from 'prop-types';\nimport useTRenderEngine from './hooks/useTRenderEngine';\nimport { TRenderEngineConfig } from './shared-types';\nimport defaultSystemFonts from './defaultSystemFonts';\n\nconst defaultTRenderEngine = {} as any;\n\nconst TRenderEngineContext =\n  React.createContext<TRenderEngine>(defaultTRenderEngine);\n\nexport const tRenderEngineProviderPropTypes: Record<\n  keyof TRenderEngineConfig,\n  any\n> = {\n  customHTMLElementModels: PropTypes.object.isRequired,\n  enableCSSInlineProcessing: PropTypes.bool,\n  enableUserAgentStyles: PropTypes.bool,\n  idsStyles: PropTypes.object,\n  ignoredDomTags: PropTypes.array,\n  ignoreDomNode: PropTypes.func,\n  domVisitors: PropTypes.object,\n  ignoredStyles: PropTypes.array.isRequired,\n  allowedStyles: PropTypes.array,\n  htmlParserOptions: PropTypes.object,\n  tagsStyles: PropTypes.object,\n  classesStyles: PropTypes.object,\n  emSize: PropTypes.number.isRequired,\n  baseStyle: PropTypes.object,\n  systemFonts: PropTypes.arrayOf(PropTypes.string),\n  fallbackFonts: PropTypes.shape({\n    serif: PropTypes.string,\n    'sans-serif': PropTypes.string,\n    monospace: PropTypes.string\n  }),\n  setMarkersForTNode: PropTypes.func,\n  dangerouslyDisableHoisting: PropTypes.bool,\n  dangerouslyDisableWhitespaceCollapsing: PropTypes.bool,\n  selectDomRoot: PropTypes.func\n};\n\n/**\n * Default fallback font for special keys such as 'sans-serif', 'monospace',\n * 'serif', based on current platform.\n */\nexport const defaultFallbackFonts = {\n  'sans-serif': Platform.select({ ios: 'system', default: 'sans-serif' }),\n  monospace: Platform.select({ ios: 'Menlo', default: 'monospace' }),\n  serif: Platform.select({ ios: 'Times New Roman', default: 'serif' })\n};\n\nexport const defaultTRenderEngineProviderProps: TRenderEngineConfig = {\n  htmlParserOptions: {\n    decodeEntities: true\n  },\n  emSize: 14,\n  ignoredDomTags: [],\n  ignoredStyles: [],\n  baseStyle: { fontSize: 14 },\n  tagsStyles: {},\n  classesStyles: {},\n  enableUserAgentStyles: true,\n  enableCSSInlineProcessing: true,\n  customHTMLElementModels: {},\n  fallbackFonts: defaultFallbackFonts,\n  systemFonts: defaultSystemFonts\n};\n\n/**\n * Use the ambient transient render engine.\n *\n * @returns The ambient transient render engine.\n *\n * @public\n */\nexport function useAmbientTRenderEngine() {\n  const engine = React.useContext(TRenderEngineContext);\n  if (\n    typeof __DEV__ === 'boolean' &&\n    __DEV__ &&\n    engine === defaultTRenderEngine\n  ) {\n    console.error('TRenderEngineProvider is missing in the render tree.');\n  }\n  return engine;\n}\n\n/**\n * A react component to share a {@link TRenderEngine} instance across different\n * rendered contents via {@link RenderHTMLSource}. This can significantly enhance\n * performance in applications with potentially dozens or hundreds of distinct\n * rendered snippets such as chat apps.\n *\n * @param props - Pass engine config here.\n */\nexport default function TRenderEngineProvider({\n  children,\n  ...config\n}: PropsWithChildren<TRenderEngineConfig>): ReactElement {\n  const engine = useTRenderEngine(config);\n  return (\n    <TRenderEngineContext.Provider value={engine}>\n      {children}\n    </TRenderEngineContext.Provider>\n  );\n}\n\n/**\n * @ignore\n */\nTRenderEngineProvider.defaultProps = defaultTRenderEngineProviderProps;\n\n/**\n * @ignore\n */\nTRenderEngineProvider.propTypes = tRenderEngineProviderPropTypes;\n"]}
\ No newline at end of file
+{"version":3,"sources":["TRenderEngineProvider.tsx"],"names":["defaultTRenderEngine","TRenderEngineContext","React","createContext","useAmbientTRenderEngine","engine","useContext","__DEV__","console","error","TRenderEngineProvider","children","config"],"mappings":";;;;;;;;AACA;;AACA;;;;AAGA,MAAMA,oBAAoB,GAAG,EAA7B;;AAEA,MAAMC,oBAAoB,gBACxBC,eAAMC,aAAN,CAAmCH,oBAAnC,CADF;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASI,uBAAT,GAAmC;AACxC,QAAMC,MAAM,GAAGH,eAAMI,UAAN,CAAiBL,oBAAjB,CAAf;;AACA,MACE,OAAOM,OAAP,KAAmB,SAAnB,IACAA,OADA,IAEAF,MAAM,KAAKL,oBAHb,EAIE;AACAQ,IAAAA,OAAO,CAACC,KAAR,CAAc,sDAAd;AACD;;AACD,SAAOJ,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,SAASK,qBAAT,CAA+B;AAC5CC,EAAAA,QAD4C;AAE5C,KAAGC;AAFyC,CAA/B,EAG0C;AACvD,QAAMP,MAAM,GAAG,+BAAiBO,MAAjB,CAAf;AACA,sBACE,6BAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEP;AAAtC,KACGM,QADH,CADF;AAKD","sourcesContent":["import TRenderEngine from '@native-html/transient-render-engine';\nimport React, { PropsWithChildren, ReactElement } from 'react';\nimport useTRenderEngine from './hooks/useTRenderEngine';\nimport { TRenderEngineConfig } from './shared-types';\n\nconst defaultTRenderEngine = {} as any;\n\nconst TRenderEngineContext =\n  React.createContext<TRenderEngine>(defaultTRenderEngine);\n\n/**\n * Use the ambient transient render engine.\n *\n * @returns The ambient transient render engine.\n *\n * @public\n */\nexport function useAmbientTRenderEngine() {\n  const engine = React.useContext(TRenderEngineContext);\n  if (\n    typeof __DEV__ === 'boolean' &&\n    __DEV__ &&\n    engine === defaultTRenderEngine\n  ) {\n    console.error('TRenderEngineProvider is missing in the render tree.');\n  }\n  return engine;\n}\n\n/**\n * A react component to share a {@link TRenderEngine} instance across different\n * rendered contents via {@link RenderHTMLSource}. This can significantly enhance\n * performance in applications with potentially dozens or hundreds of distinct\n * rendered snippets such as chat apps.\n *\n * @param props - Pass engine config here.\n */\nexport default function TRenderEngineProvider({\n  children,\n  ...config\n}: PropsWithChildren<TRenderEngineConfig>): ReactElement {\n  const engine = useTRenderEngine(config);\n  return (\n    <TRenderEngineContext.Provider value={engine}>\n      {children}\n    </TRenderEngineContext.Provider>\n  );\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js b/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js
index 1be151a..3a076d4 100644
--- a/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js
+++ b/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js
@@ -7,8 +7,6 @@ exports.default = void 0;
 
 var _react = _interopRequireDefault(require("react"));
 
-var _propTypes = _interopRequireDefault(require("prop-types"));
-
 var _useIMGElementState = _interopRequireDefault(require("./useIMGElementState"));
 
 var _IMGElementContentSuccess = _interopRequireDefault(require("./IMGElementContentSuccess"));
@@ -19,15 +17,10 @@ var _IMGElementContentLoading = _interopRequireDefault(require("./IMGElementCont
 
 var _IMGElementContentError = _interopRequireDefault(require("./IMGElementContentError"));
 
-var _defaultInitialImageDimensions = _interopRequireDefault(require("./defaultInitialImageDimensions"));
-
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 
 function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
 
-function identity(arg) {
-  return arg;
-}
 /**
  * A component to render images based on an internal loading state.
  *
@@ -37,8 +30,6 @@ function identity(arg) {
  * {@link IMGElementContentSuccess}, {@link IMGElementContentLoading}
  * and {@link IMGElementContentError} for customization.
  */
-
-
 function IMGElement(props) {
   const state = (0, _useIMGElementState.default)(props);
   let content;
@@ -59,43 +50,6 @@ function IMGElement(props) {
   }), content);
 }
 
-const imgDimensionsType = _propTypes.default.shape({
-  width: _propTypes.default.number,
-  height: _propTypes.default.number
-});
-
-const propTypes = {
-  source: _propTypes.default.object.isRequired,
-  alt: _propTypes.default.string,
-  altColor: _propTypes.default.string,
-  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
-  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
-  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
-  computeMaxWidth: _propTypes.default.func.isRequired,
-  contentWidth: _propTypes.default.number,
-  enableExperimentalPercentWidth: _propTypes.default.bool,
-  initialDimensions: imgDimensionsType,
-  onPress: _propTypes.default.func,
-  testID: _propTypes.default.string,
-  objectFit: _propTypes.default.string,
-  cachedNaturalDimensions: imgDimensionsType,
-  containerProps: _propTypes.default.object
-};
-/**
- * @ignore
- */
-
-IMGElement.propTypes = propTypes;
-/**
- * @ignore
- */
-
-IMGElement.defaultProps = {
-  enableExperimentalPercentWidth: false,
-  computeMaxWidth: identity,
-  imagesInitialDimensions: _defaultInitialImageDimensions.default,
-  style: {}
-};
 var _default = IMGElement;
 exports.default = _default;
 //# sourceMappingURL=IMGElement.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js.map b/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js.map
index 1e265b3..24ec0d0 100644
--- a/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js.map
+++ b/node_modules/react-native-render-html/lib/commonjs/elements/IMGElement.js.map
@@ -1 +1 @@
-{"version":3,"sources":["IMGElement.tsx"],"names":["identity","arg","IMGElement","props","state","content","type","React","createElement","IMGElementContentSuccess","IMGElementContentLoading","IMGElementContentError","testID","containerProps","onPress","containerStyle","imgDimensionsType","PropTypes","shape","width","number","height","propTypes","source","object","isRequired","alt","string","altColor","oneOfType","style","array","computeMaxWidth","func","contentWidth","enableExperimentalPercentWidth","bool","initialDimensions","objectFit","cachedNaturalDimensions","defaultProps","imagesInitialDimensions","defaultImageInitialDimensions"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAIA,SAASA,QAAT,CAAkBC,GAAlB,EAA4B;AAC1B,SAAOA,GAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA0D;AACxD,QAAMC,KAAK,GAAG,iCAAmBD,KAAnB,CAAd;AACA,MAAIE,OAAJ;;AACA,MAAID,KAAK,CAACE,IAAN,KAAe,SAAnB,EAA8B;AAC5BD,IAAAA,OAAO,gBAAGE,eAAMC,aAAN,CAAoBC,iCAApB,EAA8CL,KAA9C,CAAV;AACD,GAFD,MAEO,IAAIA,KAAK,CAACE,IAAN,KAAe,SAAnB,EAA8B;AACnCD,IAAAA,OAAO,gBAAGE,eAAMC,aAAN,CAAoBE,iCAApB,EAA8CN,KAA9C,CAAV;AACD,GAFM,MAEA;AACLC,IAAAA,OAAO,gBAAGE,eAAMC,aAAN,CAAoBG,+BAApB,EAA4CP,KAA5C,CAAV;AACD;;AACD,sBACE,6BAAC,4BAAD;AACE,IAAA,MAAM,EAAED,KAAK,CAACS;AADhB,KAEMT,KAAK,CAACU,cAFZ;AAGE,IAAA,OAAO,EAAEV,KAAK,CAACW,OAHjB;AAIE,IAAA,KAAK,EAAEV,KAAK,CAACW;AAJf,MAKGV,OALH,CADF;AASD;;AAED,MAAMW,iBAAiB,GAAGC,mBAAUC,KAAV,CAAgB;AACxCC,EAAAA,KAAK,EAAEF,mBAAUG,MADuB;AAExCC,EAAAA,MAAM,EAAEJ,mBAAUG;AAFsB,CAAhB,CAA1B;;AAKA,MAAME,SAA6C,GAAG;AACpDC,EAAAA,MAAM,EAAEN,mBAAUO,MAAV,CAAiBC,UAD2B;AAEpDC,EAAAA,GAAG,EAAET,mBAAUU,MAFqC;AAGpDC,EAAAA,QAAQ,EAAEX,mBAAUU,MAHgC;AAIpDN,EAAAA,MAAM,EAAEJ,mBAAUY,SAAV,CAAoB,CAACZ,mBAAUU,MAAX,EAAmBV,mBAAUG,MAA7B,CAApB,CAJ4C;AAKpDD,EAAAA,KAAK,EAAEF,mBAAUY,SAAV,CAAoB,CAACZ,mBAAUU,MAAX,EAAmBV,mBAAUG,MAA7B,CAApB,CAL6C;AAMpDU,EAAAA,KAAK,EAAEb,mBAAUY,SAAV,CAAoB,CAACZ,mBAAUO,MAAX,EAAmBP,mBAAUc,KAA7B,CAApB,CAN6C;AAOpDC,EAAAA,eAAe,EAAEf,mBAAUgB,IAAV,CAAeR,UAPoB;AAQpDS,EAAAA,YAAY,EAAEjB,mBAAUG,MAR4B;AASpDe,EAAAA,8BAA8B,EAAElB,mBAAUmB,IATU;AAUpDC,EAAAA,iBAAiB,EAAErB,iBAViC;AAWpDF,EAAAA,OAAO,EAAEG,mBAAUgB,IAXiC;AAYpDrB,EAAAA,MAAM,EAAEK,mBAAUU,MAZkC;AAapDW,EAAAA,SAAS,EAAErB,mBAAUU,MAb+B;AAcpDY,EAAAA,uBAAuB,EAAEvB,iBAd2B;AAepDH,EAAAA,cAAc,EAAEI,mBAAUO;AAf0B,CAAtD;AAkBA;AACA;AACA;;AACAtB,UAAU,CAACoB,SAAX,GAAuBA,SAAvB;AAEA;AACA;AACA;;AACApB,UAAU,CAACsC,YAAX,GAA0B;AACxBL,EAAAA,8BAA8B,EAAE,KADR;AAExBH,EAAAA,eAAe,EAAEhC,QAFO;AAGxByC,EAAAA,uBAAuB,EAAEC,sCAHD;AAIxBZ,EAAAA,KAAK,EAAE;AAJiB,CAA1B;eAOe5B,U","sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport useIMGElementState from './useIMGElementState';\nimport IMGElementContentSuccess from './IMGElementContentSuccess';\nimport IMGElementContainer from './IMGElementContainer';\nimport IMGElementContentLoading from './IMGElementContentLoading';\nimport IMGElementContentError from './IMGElementContentError';\nimport type { IMGElementProps } from './img-types';\nimport defaultImageInitialDimensions from './defaultInitialImageDimensions';\n\nexport type { IMGElementProps } from './img-types';\n\nfunction identity(arg: any) {\n  return arg;\n}\n\n/**\n * A component to render images based on an internal loading state.\n *\n * @remarks This component will attempt to draw a box of paint dimensions\n * before retrieving the physical dimensions of the image to avoid layout\n * shifts. See also {@link useIMGElementState}, {@link IMGElementContainer},\n * {@link IMGElementContentSuccess}, {@link IMGElementContentLoading}\n * and {@link IMGElementContentError} for customization.\n */\nfunction IMGElement(props: IMGElementProps): ReactElement {\n  const state = useIMGElementState(props);\n  let content: ReactNode;\n  if (state.type === 'success') {\n    content = React.createElement(IMGElementContentSuccess, state);\n  } else if (state.type === 'loading') {\n    content = React.createElement(IMGElementContentLoading, state);\n  } else {\n    content = React.createElement(IMGElementContentError, state);\n  }\n  return (\n    <IMGElementContainer\n      testID={props.testID}\n      {...props.containerProps}\n      onPress={props.onPress}\n      style={state.containerStyle}>\n      {content}\n    </IMGElementContainer>\n  );\n}\n\nconst imgDimensionsType = PropTypes.shape({\n  width: PropTypes.number,\n  height: PropTypes.number\n});\n\nconst propTypes: Record<keyof IMGElementProps, any> = {\n  source: PropTypes.object.isRequired,\n  alt: PropTypes.string,\n  altColor: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  computeMaxWidth: PropTypes.func.isRequired,\n  contentWidth: PropTypes.number,\n  enableExperimentalPercentWidth: PropTypes.bool,\n  initialDimensions: imgDimensionsType,\n  onPress: PropTypes.func,\n  testID: PropTypes.string,\n  objectFit: PropTypes.string,\n  cachedNaturalDimensions: imgDimensionsType,\n  containerProps: PropTypes.object\n};\n\n/**\n * @ignore\n */\nIMGElement.propTypes = propTypes;\n\n/**\n * @ignore\n */\nIMGElement.defaultProps = {\n  enableExperimentalPercentWidth: false,\n  computeMaxWidth: identity,\n  imagesInitialDimensions: defaultImageInitialDimensions,\n  style: {}\n};\n\nexport default IMGElement;\n"]}
\ No newline at end of file
+{"version":3,"sources":["IMGElement.tsx"],"names":["IMGElement","props","state","content","type","React","createElement","IMGElementContentSuccess","IMGElementContentLoading","IMGElementContentError","testID","containerProps","onPress","containerStyle"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,CAAoBC,KAApB,EAA0D;AACxD,QAAMC,KAAK,GAAG,iCAAmBD,KAAnB,CAAd;AACA,MAAIE,OAAJ;;AACA,MAAID,KAAK,CAACE,IAAN,KAAe,SAAnB,EAA8B;AAC5BD,IAAAA,OAAO,gBAAGE,eAAMC,aAAN,CAAoBC,iCAApB,EAA8CL,KAA9C,CAAV;AACD,GAFD,MAEO,IAAIA,KAAK,CAACE,IAAN,KAAe,SAAnB,EAA8B;AACnCD,IAAAA,OAAO,gBAAGE,eAAMC,aAAN,CAAoBE,iCAApB,EAA8CN,KAA9C,CAAV;AACD,GAFM,MAEA;AACLC,IAAAA,OAAO,gBAAGE,eAAMC,aAAN,CAAoBG,+BAApB,EAA4CP,KAA5C,CAAV;AACD;;AACD,sBACE,6BAAC,4BAAD;AACE,IAAA,MAAM,EAAED,KAAK,CAACS;AADhB,KAEMT,KAAK,CAACU,cAFZ;AAGE,IAAA,OAAO,EAAEV,KAAK,CAACW,OAHjB;AAIE,IAAA,KAAK,EAAEV,KAAK,CAACW;AAJf,MAKGV,OALH,CADF;AASD;;eAEcH,U","sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\nimport useIMGElementState from './useIMGElementState';\nimport IMGElementContentSuccess from './IMGElementContentSuccess';\nimport IMGElementContainer from './IMGElementContainer';\nimport IMGElementContentLoading from './IMGElementContentLoading';\nimport IMGElementContentError from './IMGElementContentError';\nimport type { IMGElementProps } from './img-types';\n\nexport type { IMGElementProps } from './img-types';\n\n/**\n * A component to render images based on an internal loading state.\n *\n * @remarks This component will attempt to draw a box of paint dimensions\n * before retrieving the physical dimensions of the image to avoid layout\n * shifts. See also {@link useIMGElementState}, {@link IMGElementContainer},\n * {@link IMGElementContentSuccess}, {@link IMGElementContentLoading}\n * and {@link IMGElementContentError} for customization.\n */\nfunction IMGElement(props: IMGElementProps): ReactElement {\n  const state = useIMGElementState(props);\n  let content: ReactNode;\n  if (state.type === 'success') {\n    content = React.createElement(IMGElementContentSuccess, state);\n  } else if (state.type === 'loading') {\n    content = React.createElement(IMGElementContentLoading, state);\n  } else {\n    content = React.createElement(IMGElementContentError, state);\n  }\n  return (\n    <IMGElementContainer\n      testID={props.testID}\n      {...props.containerProps}\n      onPress={props.onPress}\n      style={state.containerStyle}>\n      {content}\n    </IMGElementContainer>\n  );\n}\n\nexport default IMGElement;\n"]}
\ No newline at end of file
diff --git a/node_modules/react-native-render-html/react-native-render-html.podspec b/node_modules/react-native-render-html/react-native-render-html.podspec
deleted file mode 100644
index 6ac80d8..0000000
--- a/node_modules/react-native-render-html/react-native-render-html.podspec
+++ /dev/null
@@ -1,19 +0,0 @@
-require 'json'
-
-package = JSON.parse(File.read(File.join(__dir__, 'package.json')))
-
-Pod::Spec.new do |s|
-  s.name         = package['name']
-  s.version      = package['version']
-  s.summary      = package['description']
-  s.license      = package['license']
-
-  s.authors      = package['author']
-  s.homepage     = package['homepage']
-  s.platform     = :ios, "9.0"
-
-  s.source       = { :git => "https://github.com/meliorence/react-native-render-html.git", :tag => "v#{s.version}" }
-  s.source_files  = "ios/**/*.{h,m}"
-
-  s.dependency 'React-Core'
-end
diff --git a/node_modules/react-native-render-html/src/RenderHTMLConfigProvider.tsx b/node_modules/react-native-render-html/src/RenderHTMLConfigProvider.tsx
index 0df5375..925062a 100644
--- a/node_modules/react-native-render-html/src/RenderHTMLConfigProvider.tsx
+++ b/node_modules/react-native-render-html/src/RenderHTMLConfigProvider.tsx
@@ -1,5 +1,4 @@
 import React, { PropsWithChildren, ReactElement, useMemo } from 'react';
-import PropTypes from 'prop-types';
 import RenderersPropsProvider from './context/RenderersPropsProvider';
 import SharedPropsProvider from './context/SharedPropsProvider';
 import TChildrenRenderersContext from './context/TChildrenRendererContext';
@@ -20,29 +19,6 @@ const childrenRendererContext = {
   TNodeChildrenRenderer
 };
 
-export type RenderHTMLConfigPropTypes = Record<keyof RenderHTMLConfig, any>;
-
-export const renderHTMLConfigPropTypes: RenderHTMLConfigPropTypes = {
-  bypassAnonymousTPhrasingNodes: PropTypes.bool,
-  defaultTextProps: PropTypes.object,
-  defaultViewProps: PropTypes.object,
-  enableExperimentalBRCollapsing: PropTypes.bool,
-  enableExperimentalGhostLinesPrevention: PropTypes.bool,
-  enableExperimentalMarginCollapsing: PropTypes.bool,
-  remoteErrorView: PropTypes.func,
-  remoteLoadingView: PropTypes.func,
-  debug: PropTypes.bool,
-  computeEmbeddedMaxWidth: PropTypes.func,
-  renderersProps: PropTypes.object,
-  WebView: PropTypes.any,
-  GenericPressable: PropTypes.any,
-  defaultWebViewProps: PropTypes.object,
-  pressableHightlightColor: PropTypes.string,
-  customListStyleSpecs: PropTypes.object,
-  renderers: PropTypes.object,
-  provideEmbeddedHeaders: PropTypes.func
-};
-
 /**
  * A component to provide configuration for {@link RenderHTMLSource}
  * descendants, to be used in conjunction with {@link TRenderEngineProvider}.
@@ -85,8 +61,3 @@ export default function RenderHTMLConfigProvider(
     </RenderRegistryProvider>
   );
 }
-
-/**
- * @ignore
- */
-RenderHTMLConfigProvider.propTypes = renderHTMLConfigPropTypes;
diff --git a/node_modules/react-native-render-html/src/RenderHTMLSource.tsx b/node_modules/react-native-render-html/src/RenderHTMLSource.tsx
index c91da52..fd0e052 100644
--- a/node_modules/react-native-render-html/src/RenderHTMLSource.tsx
+++ b/node_modules/react-native-render-html/src/RenderHTMLSource.tsx
@@ -1,7 +1,6 @@
 import equals from 'ramda/src/equals';
 import React, { memo, ReactElement, useMemo } from 'react';
 import { Dimensions } from 'react-native';
-import PropTypes from 'prop-types';
 import ttreeEventsContext from './context/ttreeEventsContext';
 import isUriSource from './helpers/isUriSource';
 import { SourceLoaderProps, TTreeEvents } from './internal-types';
@@ -25,29 +24,6 @@ export type RenderHTMLSourcePropTypes = Record<
   any
 >;
 
-export const renderSourcePropTypes: RenderHTMLSourcePropTypes = {
-  source: PropTypes.oneOfType([
-    PropTypes.shape({
-      html: PropTypes.string.isRequired,
-      baseUrl: PropTypes.string
-    }),
-    PropTypes.shape({
-      dom: PropTypes.object.isRequired,
-      baseUrl: PropTypes.string
-    }),
-    PropTypes.shape({
-      uri: PropTypes.string.isRequired,
-      method: PropTypes.string,
-      body: PropTypes.any,
-      headers: PropTypes.object
-    })
-  ]),
-  onTTreeChange: PropTypes.func,
-  onHTMLLoaded: PropTypes.func,
-  onDocumentMetadataLoaded: PropTypes.func,
-  contentWidth: PropTypes.number
-};
-
 function isEmptySource(source: undefined | HTMLSource) {
   return (
     !source ||
@@ -136,9 +112,4 @@ const RenderHTMLSource = memo(
   }
 );
 
-/**
- * @ignore
- */
-(RenderHTMLSource as any).propTypes = renderSourcePropTypes;
-
 export default RenderHTMLSource;
diff --git a/node_modules/react-native-render-html/src/TChildrenRenderer.tsx b/node_modules/react-native-render-html/src/TChildrenRenderer.tsx
index 618a592..e12888e 100644
--- a/node_modules/react-native-render-html/src/TChildrenRenderer.tsx
+++ b/node_modules/react-native-render-html/src/TChildrenRenderer.tsx
@@ -9,16 +9,4 @@ import renderChildren from './renderChildren';
 const TChildrenRenderer: FunctionComponent<TChildrenRendererProps> =
   renderChildren.bind(null);
 
-export const tchildrenRendererDefaultProps: Pick<
-  TChildrenRendererProps,
-  'propsForChildren'
-> = {
-  propsForChildren: {}
-};
-
-/**
- * @ignore
- */
-TChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;
-
 export default TChildrenRenderer;
diff --git a/node_modules/react-native-render-html/src/TNodeChildrenRenderer.tsx b/node_modules/react-native-render-html/src/TNodeChildrenRenderer.tsx
index bf5aef6..b820de0 100644
--- a/node_modules/react-native-render-html/src/TNodeChildrenRenderer.tsx
+++ b/node_modules/react-native-render-html/src/TNodeChildrenRenderer.tsx
@@ -1,7 +1,6 @@
 import { ReactElement } from 'react';
 import { TNode } from '@native-html/transient-render-engine';
 import { useSharedProps } from './context/SharedPropsProvider';
-import { tchildrenRendererDefaultProps } from './TChildrenRenderer';
 import {
   TChildrenRendererProps,
   TNodeChildrenRendererProps
@@ -73,9 +72,4 @@ function TNodeChildrenRenderer(
   return renderChildren(useTNodeChildrenProps(props));
 }
 
-/**
- * @ignore
- */
-TNodeChildrenRenderer.defaultProps = tchildrenRendererDefaultProps;
-
 export default TNodeChildrenRenderer;
diff --git a/node_modules/react-native-render-html/src/TNodeRenderer.tsx b/node_modules/react-native-render-html/src/TNodeRenderer.tsx
index d32140f..0804ba7 100644
--- a/node_modules/react-native-render-html/src/TNodeRenderer.tsx
+++ b/node_modules/react-native-render-html/src/TNodeRenderer.tsx
@@ -49,6 +49,7 @@ const TNodeRenderer = memo(function MemoizedTNodeRenderer(
   const renderRegistry = useRendererRegistry();
   const TNodeChildrenRenderer = useTNodeChildrenRenderer();
   const tnodeProps = {
+    propsFromParent: { collapsedMarginTop: null },
     ...props,
     TNodeChildrenRenderer,
     sharedProps
@@ -120,16 +121,6 @@ const TNodeRenderer = memo(function MemoizedTNodeRenderer(
     : React.createElement(Renderer as any, assembledProps);
 });
 
-const defaultProps: Required<Pick<TNodeRendererProps<any>, 'propsFromParent'>> =
-  {
-    propsFromParent: {
-      collapsedMarginTop: null
-    }
-  };
-
-// @ts-expect-error default props must be defined
-TNodeRenderer.defaultProps = defaultProps;
-
 export {
   TDefaultBlockRenderer,
   TDefaultPhrasingRenderer,
diff --git a/node_modules/react-native-render-html/src/TRenderEngineProvider.tsx b/node_modules/react-native-render-html/src/TRenderEngineProvider.tsx
index 95b60df..96604c8 100644
--- a/node_modules/react-native-render-html/src/TRenderEngineProvider.tsx
+++ b/node_modules/react-native-render-html/src/TRenderEngineProvider.tsx
@@ -1,73 +1,13 @@
 import TRenderEngine from '@native-html/transient-render-engine';
 import React, { PropsWithChildren, ReactElement } from 'react';
-import { Platform } from 'react-native';
-import PropTypes from 'prop-types';
 import useTRenderEngine from './hooks/useTRenderEngine';
 import { TRenderEngineConfig } from './shared-types';
-import defaultSystemFonts from './defaultSystemFonts';
 
 const defaultTRenderEngine = {} as any;
 
 const TRenderEngineContext =
   React.createContext<TRenderEngine>(defaultTRenderEngine);
 
-export const tRenderEngineProviderPropTypes: Record<
-  keyof TRenderEngineConfig,
-  any
-> = {
-  customHTMLElementModels: PropTypes.object.isRequired,
-  enableCSSInlineProcessing: PropTypes.bool,
-  enableUserAgentStyles: PropTypes.bool,
-  idsStyles: PropTypes.object,
-  ignoredDomTags: PropTypes.array,
-  ignoreDomNode: PropTypes.func,
-  domVisitors: PropTypes.object,
-  ignoredStyles: PropTypes.array.isRequired,
-  allowedStyles: PropTypes.array,
-  htmlParserOptions: PropTypes.object,
-  tagsStyles: PropTypes.object,
-  classesStyles: PropTypes.object,
-  emSize: PropTypes.number.isRequired,
-  baseStyle: PropTypes.object,
-  systemFonts: PropTypes.arrayOf(PropTypes.string),
-  fallbackFonts: PropTypes.shape({
-    serif: PropTypes.string,
-    'sans-serif': PropTypes.string,
-    monospace: PropTypes.string
-  }),
-  setMarkersForTNode: PropTypes.func,
-  dangerouslyDisableHoisting: PropTypes.bool,
-  dangerouslyDisableWhitespaceCollapsing: PropTypes.bool,
-  selectDomRoot: PropTypes.func
-};
-
-/**
- * Default fallback font for special keys such as 'sans-serif', 'monospace',
- * 'serif', based on current platform.
- */
-export const defaultFallbackFonts = {
-  'sans-serif': Platform.select({ ios: 'system', default: 'sans-serif' }),
-  monospace: Platform.select({ ios: 'Menlo', default: 'monospace' }),
-  serif: Platform.select({ ios: 'Times New Roman', default: 'serif' })
-};
-
-export const defaultTRenderEngineProviderProps: TRenderEngineConfig = {
-  htmlParserOptions: {
-    decodeEntities: true
-  },
-  emSize: 14,
-  ignoredDomTags: [],
-  ignoredStyles: [],
-  baseStyle: { fontSize: 14 },
-  tagsStyles: {},
-  classesStyles: {},
-  enableUserAgentStyles: true,
-  enableCSSInlineProcessing: true,
-  customHTMLElementModels: {},
-  fallbackFonts: defaultFallbackFonts,
-  systemFonts: defaultSystemFonts
-};
-
 /**
  * Use the ambient transient render engine.
  *
@@ -106,13 +46,3 @@ export default function TRenderEngineProvider({
     </TRenderEngineContext.Provider>
   );
 }
-
-/**
- * @ignore
- */
-TRenderEngineProvider.defaultProps = defaultTRenderEngineProviderProps;
-
-/**
- * @ignore
- */
-TRenderEngineProvider.propTypes = tRenderEngineProviderPropTypes;
diff --git a/node_modules/react-native-render-html/src/elements/IMGElement.tsx b/node_modules/react-native-render-html/src/elements/IMGElement.tsx
index 573e7c1..a6fc90b 100644
--- a/node_modules/react-native-render-html/src/elements/IMGElement.tsx
+++ b/node_modules/react-native-render-html/src/elements/IMGElement.tsx
@@ -1,19 +1,13 @@
 import React, { ReactElement, ReactNode } from 'react';
-import PropTypes from 'prop-types';
 import useIMGElementState from './useIMGElementState';
 import IMGElementContentSuccess from './IMGElementContentSuccess';
 import IMGElementContainer from './IMGElementContainer';
 import IMGElementContentLoading from './IMGElementContentLoading';
 import IMGElementContentError from './IMGElementContentError';
 import type { IMGElementProps } from './img-types';
-import defaultImageInitialDimensions from './defaultInitialImageDimensions';
 
 export type { IMGElementProps } from './img-types';
 
-function identity(arg: any) {
-  return arg;
-}
-
 /**
  * A component to render images based on an internal loading state.
  *
@@ -44,42 +38,4 @@ function IMGElement(props: IMGElementProps): ReactElement {
   );
 }
 
-const imgDimensionsType = PropTypes.shape({
-  width: PropTypes.number,
-  height: PropTypes.number
-});
-
-const propTypes: Record<keyof IMGElementProps, any> = {
-  source: PropTypes.object.isRequired,
-  alt: PropTypes.string,
-  altColor: PropTypes.string,
-  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
-  computeMaxWidth: PropTypes.func.isRequired,
-  contentWidth: PropTypes.number,
-  enableExperimentalPercentWidth: PropTypes.bool,
-  initialDimensions: imgDimensionsType,
-  onPress: PropTypes.func,
-  testID: PropTypes.string,
-  objectFit: PropTypes.string,
-  cachedNaturalDimensions: imgDimensionsType,
-  containerProps: PropTypes.object
-};
-
-/**
- * @ignore
- */
-IMGElement.propTypes = propTypes;
-
-/**
- * @ignore
- */
-IMGElement.defaultProps = {
-  enableExperimentalPercentWidth: false,
-  computeMaxWidth: identity,
-  imagesInitialDimensions: defaultImageInitialDimensions,
-  style: {}
-};
-
 export default IMGElement;
diff --git a/node_modules/react-native-render-html/src/elements/useIMGElementState.ts b/node_modules/react-native-render-html/src/elements/useIMGElementState.ts
index 6590d21..b603f26 100644
--- a/node_modules/react-native-render-html/src/elements/useIMGElementState.ts
+++ b/node_modules/react-native-render-html/src/elements/useIMGElementState.ts
@@ -63,6 +63,10 @@ function useImageNaturalDimensions<P extends UseIMGElementStateProps>(props: {
   };
 }
 
+function identity(arg: any) {
+  return arg;
+}
+
 function useFetchedNaturalDimensions(props: {
   cachedNaturalDimensions?: ImageDimensions;
   source: ImageURISource;
@@ -116,7 +120,7 @@ export default function useIMGElementState(
     altColor,
     source,
     contentWidth,
-    computeMaxWidth,
+    computeMaxWidth = identity,
     objectFit,
     initialDimensions = defaultImageInitialDimensions,
     cachedNaturalDimensions
diff --git a/node_modules/react-native-render-html/src/elements/useImageSpecifiedDimensions.ts b/node_modules/react-native-render-html/src/elements/useImageSpecifiedDimensions.ts
index 5d6271b..710c73f 100644
--- a/node_modules/react-native-render-html/src/elements/useImageSpecifiedDimensions.ts
+++ b/node_modules/react-native-render-html/src/elements/useImageSpecifiedDimensions.ts
@@ -71,8 +71,7 @@ function deriveSpecifiedDimensionsFromProps({
 export default function useImageSpecifiedDimensions(
   props: UseIMGElementStateProps
 ) {
-  const { contentWidth, enableExperimentalPercentWidth, style, width, height } =
-    props;
+  const { contentWidth, enableExperimentalPercentWidth = false, style = {}, width, height } = props
   const flatStyle = useMemo(() => StyleSheet.flatten(style) || {}, [style]);
   const specifiedDimensions = useMemo(
     () =>
diff --git a/node_modules/react-native-render-html/src/index.ts b/node_modules/react-native-render-html/src/index.ts
index 8569583..b59ec49 100644
--- a/node_modules/react-native-render-html/src/index.ts
+++ b/node_modules/react-native-render-html/src/index.ts
@@ -128,7 +128,6 @@ export {
 export { default as TNodeRenderer } from './TNodeRenderer';
 export {
   default as TRenderEngineProvider,
-  defaultFallbackFonts,
   useAmbientTRenderEngine
 } from './TRenderEngineProvider';
 export { default as RenderHTMLConfigProvider } from './RenderHTMLConfigProvider';
diff --git a/node_modules/react-native-render-html/src/renderChildren.tsx b/node_modules/react-native-render-html/src/renderChildren.tsx
index a669402..be9ffd6 100644
--- a/node_modules/react-native-render-html/src/renderChildren.tsx
+++ b/node_modules/react-native-render-html/src/renderChildren.tsx
@@ -4,8 +4,6 @@ import TNodeRenderer from './TNodeRenderer';
 import { TChildrenRendererProps } from './shared-types';
 import collapseTopMarginForChild from './helpers/collapseTopMarginForChild';
 
-const empty = {};
-
 const mapCollapsibleChildren = (
   propsForChildren: TChildrenRendererProps['propsForChildren'],
   renderChild: TChildrenRendererProps['renderChild'],
@@ -39,7 +37,7 @@ const mapCollapsibleChildren = (
 
 export default function renderChildren({
   tchildren,
-  propsForChildren = empty,
+  propsForChildren = {},
   disableMarginCollapsing,
   renderChild
 }: TChildrenRendererProps): ReactElement {
